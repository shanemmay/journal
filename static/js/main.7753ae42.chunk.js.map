{"version":3,"sources":["logo.svg","component/Navbar.jsx","component/LoginForm.jsx","component/SignupForm.jsx","component/ForgotPasswordForm.jsx","component/EntryFormContainer.jsx","component/PersonalInfo.jsx","component/EntrySwiper.jsx","component/Journal.jsx","component/EntryViewerContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","empty","otherPage","_this2","currentPage","setPage","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","changeAuth","Component","axios","require","LoginForm","email","username","password","setEmail","bind","assertThisInitialized","setUsername","setPassword","authUser","e","target","value","includes","setState","console","log","concat","get","then","res","data","results","length","setUser","catch","err","preventDefault","aria-describedby","placeholder","onKeyUp","SignupForm","ForgotPasswordForm","EntryFormContainer","form","buttons","formChange","btnSelected","b","toLowerCase","role","aria-labelledby","component_LoginForm","component_SignupForm","component_ForgotPasswordForm","aria-selected","PersonalInfo","profilePic","user","undefined","logo","src","alt","EntrySwiper","entries","getEntries","setEntriesForSwiper","url","setEntries","error","map","key","time","entry","react_swipeable_views_lib_default","Journal","setEntry","saveEntry","showErrorNotification","showSuccessNotification","match","Date","str","arguments","NotificationManager","success","lib","rows","onChange","component_EntrySwiper","EntryViewerContainer","entryList","i","push","App","userAuth","User","page","nav","personalInfo","journal","entryViewContainer","formContainer","component_Navbar","component_PersonalInfo","component_Journal","component_EntryViewerContainer","component_EntryFormContainer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7753ae42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      empty:\"\"\n    };\n  }\n  render() {\n    // console.log('current page');\n    // console.log(this.props.currentPage);\n    let otherPage;\n    switch(this.props.currentPage)\n    {\n      case \"auth\":\n        this.props.setPage(\"journal\");\n      case \"journal\":\n        otherPage = \"profile\";\n        break;\n      case \"profile\":\n        //this.props.setPage(\"profile\");\n        otherPage = \"journal\";\n        break;\n    }\n    //let otherPage = (this.props.currentPage == \"journal\") ? \"profile\" : \"journal\";\n    return (\n      <div>\n      {/* TODO : make this menu show the link for the other page */}\n        <nav className=\"navbar  navbar-dark bg-dark\">\n          {/* <a className=\"navbar-brand\" href=\"#\">Navbar</a> */}\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse \" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\" onClick={() => this.props.setPage(otherPage)}> (coming soon) <span className=\"sr-only\">(current)</span></a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\" onClick={this.props.changeAuth}>Logout </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nconst axios = require('axios');\n\nclass LoginForm extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            email:\"\",\n            username:\"\",\n            password:\"\"\n        };\n        this.setEmail = this.setEmail.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.authUser = this.authUser.bind(this);\n    }\n    setEmail(e)\n    {\n        if( e.target.value.includes(\"@\") && e.target.value.includes(\".\") )\n        {\n            // console.log('Set email');\n            this.setState({email:e.target.value});  \n        }    \n        else \n        {\n            // console.log('Set username');\n            this.setUsername(e);\n        }            \n    }\n    setUsername(e)\n    {\n        this.setState({username:e.target.value});\n    }\n    setPassword(e)\n    {\n        this.setState({password:e.target.value});\n    }\n    authUser(e)\n    {\n        //auth user using backend services in heroku\n        console.log('state in login')\n        console.log(`https://backend-services.herokuapp.com/journalRoot/login?email=${this.state.email}&username=${this.state.username}&password=${this.state.password}`);\n        axios.get(`https://backend-services.herokuapp.com/journalRoot/login?email=${this.state.email}&username=${this.state.username}&password=${this.state.password}`)\n        .then( (res) =>\n        {\n            console.log('login success');\n            console.log(res);\n            if(res.data.results.length > 0)\n            {\n                //this.props.changeAuth();\n                this.props.setUser(\n                    {\n                        email:this.state.email,\n                        username:this.state.username,\n                        password:this.state.password\n                    }\n                );\n            }\n                \n        })\n        .catch( (err) =>\n        {\n            console.log('error');\n            console.log(err);\n        })\n        .then( () =>\n        {\n            console.log('axios length ajax finished');\n        }); \n        e.preventDefault();\n    }\n    render() {\n        /**\n         * SHANE MAKE A ONCLICK CALL TO AUTH USER!!!!!!!\n         * user heroku because everytime you push to github it'll \n         * over write the json data files in azure\n         * https://backend-services.herokuapp.com/\n         */\n        return (\n            <div>              \n                <form>\n                    <div className=\"form-group\">\n                        {/* <label for=\"email_username\">Email</label> */}\n                        <input type=\"text\" className=\"form-control\" id=\"email_username\" aria-describedby=\"email or username\" placeholder=\"Email or Username\" onKeyUp={this.setEmail} />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    {/* <div className=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"username\" placeholder=\"Username\" onKeyUp={this.setUsername}/>\n                    </div> */}\n                    <div className=\"form-group\">\n                        {/* <label for=\"exampleInputPassword1\">Password</label> */}\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onKeyUp={this.setPassword}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-outline-primary\" onClick={this.authUser}>Login</button>\n                </form>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nconst axios = require('axios');\n\nclass SignupForm extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            email:\"\",\n            username:\"\",\n            password:\"\"\n        };\n        this.setEmail = this.setEmail.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.authUser = this.authUser.bind(this);\n    }\n    setEmail(e)\n    {\n        this.setState({email:e.target.value});\n    }\n    setUsername(e)\n    {\n        this.setState({username:e.target.value});\n    }\n    setPassword(e)\n    {\n        this.setState({password:e.target.value});\n    }\n    authUser(e)\n    {\n        //auth user using backend services in heroku\n        //console.log(this.state); /signup?email=test2@test.com&username=test2&password=test2\n        axios.get(`https://backend-services.herokuapp.com/journalRoot/signup?email=${this.state.email}&username=${this.state.username}&password=${this.state.password}`)\n        .then( (res) =>\n        {\n            console.log('success');\n            console.log(res);\n            if( res.data.includes(\"sucess\") )\n            {\n                //this.props.changeAuth();\n                this.props.setUser(\n                    {\n                        email:this.state.email,\n                        username:this.state.username,\n                        password:this.state.password\n                    }\n                );\n            }      \n        })\n        .catch( (err) =>\n        {\n            console.log('error');\n            console.log(err);\n        })\n        .then( () =>\n        {\n            console.log('axios ajax finished');\n        }); \n        e.preventDefault();\n    }\n    render() {\n        /**\n         * SHANE MAKE A ONCLICK CALL TO AUTH USER!!!!!!!\n         * user heroku because everytime you push to github it'll \n         * over write the json data files in azure\n         * https://backend-services.herokuapp.com/\n         */\n        return (\n            <div>              \n                <form>\n                    <div className=\"form-group\">\n                        {/* <label for=\"exampleInputEmail1\">Email</label> */}\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onKeyUp={this.setEmail} />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        {/* <label for=\"username\">Username</label> */}\n                        <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"username\" placeholder=\"Username\" onKeyUp={this.setUsername}/>\n                    </div>\n                    <div className=\"form-group\">\n                        {/* <label for=\"exampleInputPassword1\">Password</label> */}\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onKeyUp={this.setPassword}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-outline-primary\" onClick={this.authUser}>Signup</button>\n                </form>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nconst axios = require('axios');\n\nclass ForgotPasswordForm extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            email:\"\",\n            username:\"\",\n            password:\"\"\n        };\n        this.setEmail = this.setEmail.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.authUser = this.authUser.bind(this);\n    }\n    setEmail(e)\n    {\n        this.setState({email:e.target.value});\n    }\n    setUsername(e)\n    {\n        this.setState({username:e.target.value});\n    }\n    setPassword(e)\n    {\n        this.setState({password:e.target.value});\n    }\n    authUser(e)\n    {\n        //auth user using backend services in heroku\n        //console.log(this.state);\n        axios.get('change_this'/*`https://backend-services.herokuapp.com/journalRoot/login?email=${this.state.email}&username=${this.state.username}&password=${this.state.password}`*/)\n        .then( (res) =>\n        {\n            console.log('success');\n            console.log(res);\n        })\n        .catch( (err) =>\n        {\n            console.log('error');\n            console.log(err);\n        })\n        .then( () =>\n        {\n            console.log('axios ajax finished');\n        }); \n        e.preventDefault();\n    }\n    render() {\n        /**\n         * SHANE MAKE A ONCLICK CALL TO AUTH USER!!!!!!!\n         * user heroku because everytime you push to github it'll \n         * over write the json data files in azure\n         * https://backend-services.herokuapp.com/\n         */\n        return (\n            <div>              \n                <form>\n                    <div className=\"form-group\">\n                        {/* <label for=\"exampleInputEmail1\">Email</label> */}\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onKeyUp={this.setEmail} />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        {/* <label for=\"username\">Username</label> */}\n                        <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"username\" placeholder=\"Username\" onKeyUp={this.setUsername}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-outline-primary\" onClick={this.authUser}>Submit</button>\n                </form>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default ForgotPasswordForm;\n","import React, { Component } from 'react';\nimport LoginForm from './LoginForm';\nimport SignupForm from './SignupForm';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport '../css/main.css';\n\nclass EntryFormContainer extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            \"form\":\"login\",\n            \"buttons\":[\"login\",\"signup\",\"forgot?\"]\n        };\n        this.formChange = this.formChange.bind(this);\n    }\n    formChange(btnSelected)\n    {\n        let b = btnSelected.toLowerCase();\n        // console.log(b);\n        if(b == \"login\")\n        {\n            this.setState(\n                {\n                    \"form\":\"login\",\n                });\n        }\n        else if (b == \"signup\")\n        {\n            this.setState(\n                {\n                    \"form\":\"signup\",\n                });\n        }\n        else if (b == \"forgot?\")\n        {\n            this.setState(\n                {\n                    \"form\":\"forgot?\",\n                });\n        }\n    }\n    render() {\n        this.props.setUser();\n        return (\n            <div>\n\n{/* <div className=\"card text-center\" style=\"width: 18rem;\">\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">Special title treatment</h5>\n    <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div> */}\n\n<div className=\" conatiner card text-center\" id=\"EntryFormContainer\">\n    <div className=\"card-body\">\n        <h5 className=\"card-title\">{this.state.form}</h5>\n        <div className=\"tab-content\" id=\"pills-tabContent\">\n            <div className={\"tab-pane fade \"  + ((this.state.form == this.state.buttons[0]) ? \"show active\" : \"\" )} id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\">\n                        <LoginForm setUser={this.props.setUser}/>\n            </div>\n            <div className={\"tab-pane fade \"  + ((this.state.form == this.state.buttons[1]) ? \"show active\" : \"\" )} id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">\n                        <SignupForm setUser={this.props.setUser}/>\n            </div>\n            <div className={\"tab-pane fade \"  + ((this.state.form == this.state.buttons[2]) ? \"show active\" : \"\" )} id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\">\n                        <ForgotPasswordForm />\n            </div>\n        </div>\n        {/* TODO : put current form button above and center the tabs */}\n        <ul className=\"row nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n            <li className=\"col nav-item\">\n                <a className={\"nav-link \" + ((this.state.form == this.state.buttons[0]) ? \"active\" : \"\" )} id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#pills-home\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\" onClick={() => this.formChange(this.state.buttons[0])}>{this.state.buttons[0]}</a>\n            </li>\n            <li className=\"col nav-item\">\n                <a className={\"nav-link \" + ((this.state.form == this.state.buttons[1]) ? \"active\" : \"\" )} id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#pills-profile\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\" onClick={() => this.formChange(this.state.buttons[1])}>{this.state.buttons[1]}</a>\n            </li>\n            <li className=\"col nav-item\">\n                <a className={\"nav-link \" + ((this.state.form == this.state.buttons[2]) ? \"active\" : \"\" )} id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"#pills-contact\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\" onClick={() => this.formChange(this.state.buttons[2])}>{this.state.buttons[2]}</a>\n            </li>\n        </ul>\n    </div>\n</div>         \n            </div>\n        );\n    }\n}\n\nexport default EntryFormContainer;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport \"../css/main.css\";\nimport logo from '../logo.svg';\n\n/**\n * SHANE once user logs in\n * change state of app to rerender ui as a authuser on journal page\n * TODO : make it so user only needs email of username\n * AXIOS INFO : https://github.com/axios/axios\n */\n\nclass PersonalInfo extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      empty:\"\"\n    };\n  }\n  render() {\n      let profilePic = this.props.user.profilePic;\n      if(profilePic == undefined)\n        profilePic = logo;\n    // console.log(\"profile pic src\");\n    // console.log(profilePic);\n    return (\n      <div >\n<div className=\"jumbotron jumbotron-fluid text-center\">\n    <div className=\"container\">\n        <img src={profilePic} id=\"profilePic\" className=\"rounded App-logo\" alt=\"profilePic\" />\n        <h3 id=\"username\">{this.props.user.username}</h3>\n        {/* email */}\n        {/* change password */}\n    </div>\n</div>\n      </div>\n    );\n  }\n}\n\nexport default PersonalInfo;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport SwipeableViews from 'react-swipeable-views';\n/**\n * SHANE once user logs in\n * change state of app to rerender ui as a authuser on journal page\n * TODO : make it so user only needs email of username\n * AXIOS INFO : https://github.com/axios/axios\n * TODO : change current page when page changes (auth, journal, profile)\n */\n\nclass EntrySwiper extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      entries:[]\n    };\n    this.getEntries = this.getEntries.bind(this);\n    this.setEntriesForSwiper = this.setEntriesForSwiper.bind(this);\n  }\n  getEntries()\n  {\n    //get entries\n    const url = `https://backend-services.herokuapp.com/journalRoot/getEntries?email=${this.props.user.email}&username=${this.props.user.email}`;\n    let entries = [];\n    //had to make this variable because I can't call this.setEntriesFroSwiper in axios because 'this' isn't defined there\n    let setEntries = this.setEntriesForSwiper; \n    axios.get(url)\n    .then(function (res) \n    {\n        // handle success\n        console.log('get entries res');\n        console.log(res);\n        entries = res.data.results;\n        setEntries(entries);\n    })\n    .catch(function (error) \n    {\n        // handle error\n        console.log(error);\n    })\n    .then(function () \n    {\n        // always executed\n       \n    });      \n  }\n  setEntriesForSwiper(entries)\n  {\n    //set state\n    entries = entries.map(e => \n    {\n        return(\n        <div key={e.time} className=\"card\">{e.entry}</div>\n        );\n    });\n    //this is to stop an infinite cycle for new users\n    if(entries.length > 0)\n    {\n        this.setState({entries:entries});\n    }\n  }\n  render() \n  {\n      if(this.state.entries.length < 1)\n      {\n        this.getEntries();\n      }\n        \n      console.log('EntrySwiper : state entries');\n      console.log(this.state.entries);\n    return (\n      <div>\n          <SwipeableViews>\n              {/* divs go here */}\n              {this.state.entries}\n          </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nexport default EntrySwiper;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport EntrySwiper from './EntrySwiper';\n\n/**\n * SHANE once user logs in\n * change state of app to rerender ui as a authuser on journal page\n * TODO : make it so user only needs email of username\n * AXIOS INFO : https://github.com/axios/axios\n * TODO : change current page when page changes (auth, journal, profile)\n */\n\nclass Journal extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      entry:\"\"\n    };\n    this.setEntry = this.setEntry.bind(this);\n    this.saveEntry = this.saveEntry.bind(this);\n    this.showErrorNotification = this.showErrorNotification.bind(this);\n    this.showSuccessNotification = this.showSuccessNotification.bind(this);\n  }\n  setEntry(e)\n  {\n      this.setState({entry:e.target.value});\n  }\n  saveEntry(e)\n  {\n      // console.log('user in journal');\n      // console.log(this.props.user);\n      let user = this.props.user;\n      let regex = /[a-zA-Z]+/g;\n      // console.log('entry');\n      // console.log(this.state.entry);\n      if( this.state.entry.match(regex) != null)\n      {\n        // console.log(`https://backend-services.herokuapp.com/journalRoot/saveEntry?email=${user.email}&username=${user.username}&password=${user.password}&entry=${this.state.entry}&timestamp=${new Date()}&longitude=${1}&latitude=${1}`);\n        axios.get(`https://backend-services.herokuapp.com/journalRoot/saveEntry?email=${user.email}&username=${user.username}&entry=${this.state.entry}&time=${new Date()}&longitude=${1}&latitude=${1}`)\n        .then( (res) =>\n        {\n            console.log(\"success\");\n            console.log(res);\n            this.showSuccessNotification();\n            this.setState({entry:\"\"});\n        })\n        .catch( (err) =>\n        {\n            console.log(\"error\");\n            console.log(err);\n            this.showErrorNotification(\"Failed to save!\");\n        })\n        .then( () =>\n        {\n            console.log('save entry should be finished');\n        });\n      }\n      else\n      {\n        console.log('show empty entry error');\n        this.showErrorNotification();\n      }\n      e.preventDefault();\n  }\n  showErrorNotification(str = \"\")\n  {\n      str = (str.length > 0) ? str : \"Entry is empty!\";\n      return NotificationManager.error(str,\"Error!\",3000);\n  }\n  showSuccessNotification(str = \"\")\n  {\n       str = (str.length > 0) ? str : \"Memory saved!\";\n      return NotificationManager.success(str,\"Success!\",3000);\n  }\n  render() {\n    return (\n      <div>\n<NotificationContainer />\n{/* <div className=\"alert alert-success\" role=\"alert\">\n  A simple success alert—check it out!\n</div>\n<div className=\"alert alert-danger\" role=\"alert\">\n  A simple danger alert—check it out!\n</div> */}\n        <form>\n            <div className=\"form-group\">\n                {/* <label id=\"journal_label\" htmlFor=\"journal\">Entry</label> */}\n                <textarea className=\"form-control\" id=\"journal\" rows=\"7\" onKeyUp={this.setEntry} onChange={this.setEntry} value={this.state.entry}></textarea>\n                <button className=\"btn btn-outline-primary\" onClick={this.saveEntry}>Save</button>\n            </div>\n            \n            <div>\n              <h4 >Read Entries</h4>\n              <EntrySwiper user={this.props.user} />\n            </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Journal;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n/**\n * SHANE once user logs in\n * change state of app to rerender ui as a authuser on journal page\n * TODO : make it so user only needs email of username\n * AXIOS INFO : https://github.com/axios/axios\n * TODO : change current page when page changes (auth, journal, profile)\n */\n\nclass EntryViewerContainer extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      entries:[]\n    };\n    this.getEntries = this.getEntries.bind(this);\n  }\n  getEntries()\n  {\n      console.log('getentries url');\n    console.log(`https://backend-services.herokuapp.com/journalRoot/getEntries?email=${this.props.user.email}&username=${this.props.user.username}&password=${this.props.user.password}`);\n    //axios.get(`https://backend-services.herokuapp.com/journalRoot/getEntries?email=${this.props.user.email}&username=${this.props.user.username}&password=${this.props.user.password}`)\n    axios.get(`https://backend-services.herokuapp.com/journalRoot/getEntries?email=${this.props.user.email}&username=${this.props.user.username}`)\n    .then( (res) =>\n    {\n        console.log('get entries success');\n        let entries = res.data.entries;\n        let entryList = [];\n        console.log( (entries) );\n        \n        for(let i in entries)\n        {\n            //console.log(entries[i]);\n            entryList.push(<li key={entries[i].time}>{entries[i].entry}</li>);\n        }\n        console.log(entryList);\n        this.setState({entries:entryList});\n        // const entries = res.data;\n        // let list = [];\n        // for(let i in entries)\n        // {\n        //     list.push(entries[i]);\n        // }\n        // entries = list.map(entry =>\n        //     {\n        //         console.log(entry);\n        //         return <li key={entry.time}>{entry.entry}</li>;\n        //     });\n        // this.setState({entries:entries});\n    })\n    .catch( (err) =>\n    {\n        console.log(\"error getting entries\");\n        console.log(err);\n    });\n  }\n  render() {\n      if(this.state.entries.length < 1)\n        this.getEntries();\n      console.log(this.state.entries);\n    return (\n      <div>\n          <ul>{this.state.entries}</ul>\n      </div>\n    );\n  }\n}\n\nexport default EntryViewerContainer;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport EntryFormContainer from './component/EntryFormContainer';\nimport PersonalInfo from './component/PersonalInfo';\nimport Journal from './component/Journal';\nimport EntryViewContainer from './component/EntryViewerContainer';\n\n/**\n * FOR SWIPPING : https://react-swipeable-views.com/demos/demos/\n * INFO : to deploy to github pages run $ npm run deploy\n * INFO : notifications info https://www.npmjs.com/package/react-notifications\n * SHANE once user logs in\n * change state of app to rerender ui as a authuser on journal page\n * TODO : make it so user only needs email of username\n * AXIOS INFO : https://github.com/axios/axios\n * TODO : change current page when page changes (auth, journal, profile)\n */\n\nclass App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      userAuth:false,\n      user:\n      {\n        email:\"\",\n        username:\"\",\n        password:\"\"\n      },\n      currentPage:\"auth\" //journal , profile\n    };\n    this.changeAuth = this.changeAuth.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.setPage = this.setPage.bind(this);\n  }\n  changeAuth()\n  {\n    this.setState({userAuth: !this.state.userAuth});\n  }\n  setUser(User = null)\n  {\n    if(User == null)\n    {\n      console.log('setuser reached');\n      return;\n    }\n    console.log('setuser called. user :');\n    console.log(User);\n    this.setState(\n      {\n        userAuth:true,\n        user:\n        {\n          email:User.email,\n          username:User.username,\n          password:User.password\n        }\n      });\n    console.log('setuser finished. user : , state :');\n    console.log(this.state.user);\n    console.log(this.state)\n  }\n  setPage(page)\n  {\n    this.setState({currentPage:page});\n  }\n  render() {\n    console.log('App state');\n    console.log(this.state);\n    let nav;\n    let personalInfo;\n    let journal;\n    let entryViewContainer;\n    let formContainer;\n    if (this.state.userAuth)\n    {\n      nav = <Navbar changeAuth={this.changeAuth} setPage={this.setPage} currentPage={this.state.currentPage}/>;\n      personalInfo = <PersonalInfo user={this.state.user}/>;\n      if(this.state.currentPage == \"journal\")\n      {\n        journal = <Journal user={this.state.user}/>;\n      }\n      else\n      {\n        console.log('App : user being sent to entryViewContainer');\n        console.log(this.state.user);\n        entryViewContainer = <EntryViewContainer user={this.state.user} />\n      }\n    }\n    else\n    {\n      //this.setPage(\"auth\");\n      formContainer = <EntryFormContainer changeAuth={this.changeAuth} setUser={this.setUser}/>; \n    }\n    return (\n      <div className=\"App\">\n      {/* TODO : make this menu show the link for the other page */}\n        {nav}\n        {personalInfo}\n        {journal}\n        {entryViewContainer}\n        {formContainer}\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//this allows me to use bootstrap\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// //import 'bootstrap/dist/css/bootstrap-theme.min.css'; // optional\n// import 'jquery/dist/jquery.min.js';\n// import 'bootstrap/dist/js/bootstrap.min.js';\n//import 'bootstrap';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}